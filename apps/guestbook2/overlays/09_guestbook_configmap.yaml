kind: ConfigMap
apiVersion: v1
metadata:
  name: guestbook-config
  namespace: guestbook2
data:
  controllers.js: |
    var redisApp = angular.module('redis', ['ui.bootstrap']);

    /**
     *  * Constructor
     *   */
    function RedisController() {}

    RedisController.prototype.onRedis = function() {
        this.scope_.messages.push(this.scope_.msg);
        this.scope_.msg = "";
        var value = this.scope_.messages.join();
        this.http_.get("guestbook.php?cmd=set&key=messages&value=" + value)
                .success(angular.bind(this, function(data) {
                    this.scope_.redisResponse = "Updated.";
                }));
    };

    redisApp.controller('RedisCtrl', function ($scope, $http, $location) {
            $scope.controller = new RedisController();
            $scope.controller.scope_ = $scope;
            $scope.controller.location_ = $location;
            $scope.controller.http_ = $http;

            $scope.controller.http_.get("guestbook.php?cmd=get&key=messages")
                .success(function(data) {
                    console.log(data);
                    $scope.messages = data.data.split(",");
                });
    });
  guestbook.php: |
    <?php

    error_reporting(E_ALL);
    ini_set('display_errors', 1);

    require 'Predis/Autoloader.php';

    Predis\Autoloader::register();

    if (isset($_GET['cmd']) === true) {
      $host = 'redis-primary';
      if (getenv('GET_HOSTS_FROM') == 'env') {
        $host = getenv('REDIS_PRIMARY_SERVICE_HOST');
      }
      header('Content-Type: application/json');
      if ($_GET['cmd'] == 'set') {
        $client = new Predis\Client([
          'scheme' => 'tcp',
          'host'   => $host,
          'port'   => 6379,
        ]);

        $client->set($_GET['key'], $_GET['value']);
        print('{"message": "Updated"}');
      } else {
        $host = 'redis-secondary';
        if (getenv('GET_HOSTS_FROM') == 'env') {
          $host = getenv('REDIS_SECONDARY_SERVICE_HOST');
        }
        $client = new Predis\Client([
          'scheme' => 'tcp',
          'host'   => $host,
          'port'   => 6379,
        ]);

        $value = $client->get($_GET['key']);
        print('{"data": "' . $value . '"}');
      }
    } else {
      phpinfo();
    } ?>
  index.html: |
    <html ng-app="redis">
      <head>
        <title>Guestbook</title>
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.12/angular.min.js"></script>
        <script src="controllers.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.13.0/ui-bootstrap-tpls.js"></script>
      </head>
      <body ng-controller="RedisCtrl">
        <div style="width: 50%; margin-left: 20px">
          <h2>Guestbook</h2>
        <form>
        <fieldset>
        <input ng-model="msg" placeholder="Messages" class="form-control" type="text" name="input"><br>
        <button type="button" class="btn btn-primary" ng-click="controller.onRedis()">Submit</button>
        </fieldset>
        </form>
        <div>
          <div ng-repeat="msg in messages track by $index">
            {{msg}}
          </div>
        </div>
        </div>
      </body>
    </html>
